type Query {
    projectGitHistory(
        projectId: String!
        cursor: String
        pageSize: Int = 20
    ): ProjectGitHistoryPage
}

type ProjectGitHistoryPage {
    commits: [Commit!]
    pageInfo: PageInfo
}

type Commit {
    sha: String!
    msg: String!
    author: String
    url: String
    time: Int!
    isHead: Boolean
}

type Mutation {
    import(
        projectId: String!
        files: [Upload]!
        onlyValidate: Boolean
        wipeInvolvedCollections: Boolean = False
        wipeProject: Boolean = False
        fallbackLang: String!
    ): ImportReport
}

type ImportReport {
    fileMessages: [FileMessage]
    summary: [ImportSummaryEntry]
}

type ImportSummaryEntry {
    text: String!
    longText: String
}

type FileMessage{
    errors: [ImportSummaryEntry]
    warnings: [ImportSummaryEntry]
    info: [ImportSummaryEntry]
    conflicts: Boolean
    filename: String
}

